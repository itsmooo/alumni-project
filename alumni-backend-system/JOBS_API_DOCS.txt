===============================================================================
                            JOBS API DOCUMENTATION
                    CRUD Operations & Statistics Routes
===============================================================================

AUTHENTICATION REQUIRED:
All routes require a valid JWT token in the Authorization header:
Authorization: Bearer <your_jwt_token>

PERMISSIONS:
- Admin: Full access to all routes
- Moderator: Read access to admin routes (except create/delete)
- Alumni: Access to summary statistics only

===============================================================================
                                CRUD OPERATIONS
===============================================================================

1. CREATE JOB
   Method: POST
   Endpoint: /api/jobs/admin
   Permission: Admin only
   
   REQUIRED FIELDS:
   - title (string): Job title
   - company.name (string): Company name
   - description (string): Job description
   - type (enum): "full-time", "part-time", "contract", "internship", "volunteer"
   - category (enum): "technology", "healthcare", "finance", "education", "marketing", "sales", "operations", "other"
   - experienceLevel (enum): "entry", "mid", "senior", "executive"
   - postedBy (ObjectId): User ID who posted the job
   - applicationMethod (enum): "email", "website", "phone", "in_person"

   CURL EXAMPLE:
   curl -X POST "http://localhost:5000/api/jobs/admin" \
     -H "Authorization: Bearer YOUR_TOKEN" \
     -H "Content-Type: application/json" \
     -d '{
       "title": "Senior Software Engineer",
       "company": {
         "name": "Tech Corp",
         "website": "https://techcorp.com",
         "location": {
           "city": "San Francisco",
           "country": "USA",
           "isRemote": true
         }
       },
       "description": "We are looking for a senior software engineer...",
       "type": "full-time",
       "category": "technology",
       "experienceLevel": "senior",
       "postedBy": "USER_OBJECT_ID",
       "applicationMethod": "email",
       "salary": {
         "min": 120000,
         "max": 180000,
         "currency": "USD",
         "period": "yearly"
       },
       "skills": ["JavaScript", "React", "Node.js"],
       "featured": true
     }'

2. READ ALL JOBS (Admin List)
   Method: GET
   Endpoint: /api/jobs/admin
   Permission: Admin, Moderator
   
   QUERY PARAMETERS (all optional):
   - page (number): Page number (default: 1)
   - limit (number): Items per page (default: 20, max: 100)
   - type, category, experienceLevel, status, featured: Filters
   - search (string): Search in title, company name, description
   - sortBy: "createdAt", "title", "company", "views", "applicationCount", "expiresAt"
   - sortOrder: "asc", "desc"
   - dateFrom, dateTo (ISO8601): Date range filters

   CURL EXAMPLE:
   curl -X GET "http://localhost:5000/api/jobs/admin?page=1&limit=10&status=active" \
     -H "Authorization: Bearer YOUR_TOKEN"

3. READ SINGLE JOB (Admin View)
   Method: GET
   Endpoint: /api/jobs/admin/:id
   Permission: Admin, Moderator
   
   CURL EXAMPLE:
   curl -X GET "http://localhost:5000/api/jobs/admin/JOB_ID" \
     -H "Authorization: Bearer YOUR_TOKEN"

4. UPDATE JOB
   Method: PUT
   Endpoint: /api/jobs/admin/:id
   Permission: Admin only
   
   CURL EXAMPLE:
   curl -X PUT "http://localhost:5000/api/jobs/admin/JOB_ID" \
     -H "Authorization: Bearer YOUR_TOKEN" \
     -H "Content-Type: application/json" \
     -d '{
       "title": "Updated Job Title",
       "status": "filled",
       "featured": false
     }'

5. DELETE JOB
   Method: DELETE
   Endpoint: /api/jobs/admin/:id
   Permission: Admin only
   
   CURL EXAMPLE:
   curl -X DELETE "http://localhost:5000/api/jobs/admin/JOB_ID" \
     -H "Authorization: Bearer YOUR_TOKEN"

6. BULK OPERATIONS
   Method: POST
   Endpoint: /api/jobs/admin/bulk
   Permission: Admin only
   
   ACTIONS: "delete", "activate", "deactivate", "feature", "unfeature", "expire"

   CURL EXAMPLE:
   curl -X POST "http://localhost:5000/api/jobs/admin/bulk" \
     -H "Authorization: Bearer YOUR_TOKEN" \
     -H "Content-Type: application/json" \
     -d '{
       "action": "feature",
       "jobIds": ["job_id_1", "job_id_2", "job_id_3"]
     }'

===============================================================================
                                STATISTICS
===============================================================================

7. SUMMARY STATISTICS (Alumni/Admin Access)
   Method: GET
   Endpoint: /api/jobs/summary
   Permission: Alumni, Admin
   
   CURL EXAMPLE:
   curl -X GET "http://localhost:5000/api/jobs/summary" \
     -H "Authorization: Bearer YOUR_TOKEN"

   RESPONSE EXAMPLE:
   {
     "totalJobs": {
       "value": 150,
       "change": 12.5,
       "changeType": "increase"
     },
     "activeJobs": {
       "value": 120,
       "percentage": 80.0
     },
     "jobsThisMonth": {
       "value": 25,
       "change": 12.5,
       "changeType": "increase"
     },
     "totalApplications": {
       "value": 1250
     },
     "featuredJobs": {
       "value": 15
     }
   }

8. DETAILED STATISTICS (Admin/Moderator Only)
   Method: GET
   Endpoint: /api/jobs/admin/statistics
   Permission: Admin, Moderator
   
   CURL EXAMPLE:
   curl -X GET "http://localhost:5000/api/jobs/admin/statistics" \
     -H "Authorization: Bearer YOUR_TOKEN"

   INCLUDES:
   - Main KPIs with growth metrics
   - Breakdown by status, type, and category
   - Monthly trends (last 12 months)
   - Top performing jobs by applications
   - Average metrics (views, applications per job)
   - Alerts (expired jobs, jobs expiring soon)

===============================================================================
                                EXPORT DATA
===============================================================================

9. EXPORT DATA (Admin Only)
   Method: GET
   Endpoint: /api/jobs/admin/export
   Permission: Admin only
   
   QUERY PARAMETERS:
   - format: "csv" or "json" (default: "json")
   - status, type, category: Filters
   - dateFrom, dateTo: Date range filters

   CURL EXAMPLES:
   # Export as JSON
   curl -X GET "http://localhost:5000/api/jobs/admin/export?format=json" \
     -H "Authorization: Bearer YOUR_TOKEN" \
     -o jobs_export.json

   # Export as CSV with filters
   curl -X GET "http://localhost:5000/api/jobs/admin/export?format=csv&status=active" \
     -H "Authorization: Bearer YOUR_TOKEN" \
     -o jobs_export.csv

===============================================================================
                                IMPORTANT NOTES
===============================================================================

1. AUTHENTICATION: All routes require valid JWT token with appropriate role
2. ROUTE ORDERING: Admin routes defined before /:id to prevent conflicts
3. DATE VALIDATION: applicationDeadline and expiresAt must be future dates
4. SALARY VALIDATION: min cannot be greater than max if both provided
5. DEFAULT VALUES: expiresAt (30 days), status ("active"), featured (false)
6. SEARCH: Admin search covers title, company name, and description
7. PERMISSIONS: Only job poster or admin can edit/delete jobs
8. BULK OPERATIONS: Minimum 1 job ID required, all must be valid ObjectIds
9. EXPORT: CSV includes proper escaping, JSON includes metadata
10. STATISTICS: Consider caching in production, trends show last 12 months

===============================================================================
                                WORKFLOW EXAMPLES
===============================================================================

ADMIN WORKFLOW:
1. GET /api/jobs/admin/statistics (dashboard overview)
2. GET /api/jobs/admin (list with filters)
3. POST /api/jobs/admin (create job)
4. GET /api/jobs/admin/:id (view details)
5. PUT /api/jobs/admin/:id (update)
6. POST /api/jobs/admin/bulk (bulk operations)
7. GET /api/jobs/admin/export (export data)

ALUMNI WORKFLOW:
1. GET /api/jobs/summary (stats)
2. GET /api/jobs (browse jobs)
3. GET /api/jobs/:id (view details)
4. POST /api/jobs/:id/apply (apply)
5. GET /api/jobs/my/applications (track applications)

===============================================================================
