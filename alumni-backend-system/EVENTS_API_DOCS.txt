================================================================================
                        ALUMNI EVENTS API DOCUMENTATION
================================================================================

AUTHENTICATION REQUIRED FOR ALL ROUTES
--------------------------------------
All routes require a Bearer token in the Authorization header.

Get token by logging in:
POST http://localhost:5000/api/auth/login
Body: {"identifier":"your_email@example.com","password":"your_password"}
Response: {"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."}

Use token in headers: Authorization: Bearer YOUR_TOKEN

================================================================================
                            CRUD OPERATIONS
================================================================================

1. CREATE EVENT
---------------
Endpoint: POST /api/events/admin
Access: Admin, Moderator
Description: Create a new event

REQUEST:
curl -X POST http://localhost:5000/api/events/admin \
  -H "Authorization: Bearer YOUR_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "title": "Alumni Tech Conference 2025",
    "description": "Annual tech conference for our alumni community",
    "type": "networking",
    "date": {
      "start": "2025-03-15T09:00:00Z",
      "end": "2025-03-15T17:00:00Z"
    },
    "location": {
      "type": "hybrid",
      "address": "Tech Hub, Silicon Valley",
      "city": "San Francisco",
      "country": "USA",
      "virtualLink": "https://zoom.us/j/123456789"
    },
    "capacity": 200,
    "registration": {
      "required": true,
      "deadline": "2025-03-10T23:59:59Z",
      "fee": {
        "amount": 50,
        "currency": "USD"
      }
    },
    "status": "published",
    "isPublic": true,
    "tags": ["technology", "networking", "AI"]
  }'

REQUIRED FIELDS:
- title (string): Event title
- description (string): Event description  
- type (enum): reunion, webinar, fundraiser, networking, workshop, social, other
- date.start (ISO date): Event start date/time
- date.end (ISO date): Event end date/time
- location.type (enum): physical, virtual, hybrid

RESPONSE:
{
  "message": "Event created successfully",
  "event": {
    "_id": "685db753d0820b83e3f0c37e",
    "title": "Alumni Tech Conference 2025",
    "type": "networking",
    "organizer": {
      "firstName": "Akram",
      "lastName": "Ismail",
      "role": "admin"
    },
    "capacity": 200,
    "status": "published"
  }
}

================================================================================

2. READ EVENTS (LIST ALL)
--------------------------
Endpoint: GET /api/events/admin
Access: Admin, Moderator

REQUEST:
curl -X GET "http://localhost:5000/api/events/admin?page=1&limit=10&sortBy=date&sortOrder=asc" \
  -H "Authorization: Bearer YOUR_TOKEN"

QUERY PARAMETERS:
- page (optional): Page number (default: 1)
- limit (optional): Items per page (default: 20, max: 100)
- sortBy (optional): title, date, attendees, revenue, createdAt
- sortOrder (optional): asc, desc
- status (optional): draft, published, cancelled, completed
- type (optional): reunion, webinar, fundraiser, networking, workshop, social, other
- search (optional): Search in title, description, tags

RESPONSE:
{
  "events": [
    {
      "_id": "685db753d0820b83e3f0c37e",
      "title": "Alumni Tech Conference 2025",
      "type": "networking",
      "date": {
        "start": "2025-03-15T09:00:00.000Z",
        "end": "2025-03-15T17:00:00.000Z"
      },
      "organizer": {
        "firstName": "Akram",
        "lastName": "Ismail"
      },
      "capacity": 250,
      "status": "published",
      "attendeeCount": 0
    }
  ],
  "pagination": {
    "page": 1,
    "limit": 10,
    "total": 1,
    "pages": 1
  }
}

================================================================================

3. READ SINGLE EVENT
---------------------
Endpoint: GET /api/events/admin/:id
Access: Admin, Moderator

REQUEST:
curl -X GET "http://localhost:5000/api/events/admin/685db753d0820b83e3f0c37e" \
  -H "Authorization: Bearer YOUR_TOKEN"

RESPONSE:
{
  "event": {
    "_id": "685db753d0820b83e3f0c37e",
    "title": "Alumni Tech Conference 2025",
    "organizer": {
      "firstName": "Akram",
      "lastName": "Ismail"
    },
    "capacity": 250,
    "attendees": [],
    "status": "published"
  },
  "adminStats": {
    "attendeeCount": 0,
    "attendedCount": 0,
    "cancelledCount": 0,
    "revenue": 0,
    "capacityUtilization": 0
  }
}

================================================================================

4. UPDATE EVENT
---------------
Endpoint: PUT /api/events/admin/:id
Access: Admin, Moderator

REQUEST:
curl -X PUT "http://localhost:5000/api/events/admin/685db753d0820b83e3f0c37e" \
  -H "Authorization: Bearer YOUR_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "title": "Alumni Tech Conference 2025 - UPDATED",
    "capacity": 250,
    "status": "published"
  }'

RESPONSE:
{
  "message": "Event updated successfully",
  "event": {
    "_id": "685db753d0820b83e3f0c37e",
    "title": "Alumni Tech Conference 2025 - UPDATED",
    "capacity": 250,
    "updatedAt": "2025-06-26T21:11:38.467Z"
  }
}

================================================================================

5. DELETE EVENT
---------------
Endpoint: DELETE /api/events/admin/:id
Access: Admin Only

REQUEST:
curl -X DELETE "http://localhost:5000/api/events/admin/685db763d0820b83e3f0c383" \
  -H "Authorization: Bearer YOUR_TOKEN"

RESPONSE:
{
  "message": "Event deleted successfully",
  "deletedEvent": {
    "id": "685db763d0820b83e3f0c383",
    "title": "Alumni Reunion 2025",
    "type": "reunion"
  }
}

================================================================================

6. BULK OPERATIONS
------------------
Endpoint: POST /api/events/admin/bulk
Access: Admin, Moderator (delete requires Admin)

REQUEST:
curl -X POST "http://localhost:5000/api/events/admin/bulk" \
  -H "Authorization: Bearer YOUR_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{
    "action": "publish",
    "eventIds": ["685db763d0820b83e3f0c383", "685db753d0820b83e3f0c37e"]
  }'

AVAILABLE ACTIONS:
- publish: Set status to published
- draft: Set status to draft
- cancel: Set status to cancelled
- complete: Set status to completed
- delete: Delete events (admin only)

RESPONSE:
{
  "message": "Bulk publish operation completed",
  "results": {
    "total": 2,
    "successful": 2,
    "failed": 0
  }
}

================================================================================
                              STATISTICS
================================================================================

7. EVENTS SUMMARY STATISTICS
-----------------------------
Endpoint: GET /api/events/summary
Access: Alumni, Admin

REQUEST:
curl -X GET http://localhost:5000/api/events/summary \
  -H "Authorization: Bearer YOUR_TOKEN"

RESPONSE:
{
  "totalEvents": {
    "count": 1,
    "changeFromLastMonth": 100
  },
  "publishedEvents": {
    "count": 1,
    "changeFromLastMonth": 100
  },
  "upcomingEvents": {
    "count": 0,
    "period": "Next 30 days"
  },
  "eventsThisMonth": {
    "count": 1,
    "changeFromLastMonth": 100
  },
  "totalAttendees": {
    "count": 0,
    "label": "Total registered attendees"
  }
}

STATISTICS EXPLAINED:
- totalEvents: All events with month-over-month growth percentage
- publishedEvents: Only published events with change metrics
- upcomingEvents: Events in the next 30 days
- eventsThisMonth: New events created this month vs last month
- totalAttendees: Sum of all registered attendees across events

================================================================================
                          PERMISSION LEVELS
================================================================================

ADMIN:
- Full access to all CRUD operations
- Can delete events
- Can perform all bulk operations
- Access to all statistics

MODERATOR:
- Can view, create, update events
- Can perform bulk operations except delete
- Access to all statistics
- Cannot delete events

ALUMNI:
- Can view statistics only
- No CRUD access to admin routes

================================================================================
                            ERROR RESPONSES
================================================================================

400 Bad Request: Validation errors
401 Unauthorized: No token provided
403 Forbidden: Insufficient permissions
404 Not Found: Event not found
500 Server Error: Internal server error

================================================================================
                              NOTES
================================================================================

1. All dates should be in ISO 8601 format (YYYY-MM-DDTHH:mm:ssZ)
2. Event end date must be after start date
3. Pagination is available for list endpoints
4. Search functionality works on title, description, and tags
5. Statistics are calculated in real-time from the database
6. Bulk operations are atomic - either all succeed or all fail

================================================================================
                            EXAMPLE WORKFLOW
================================================================================

1. Login to get token
2. Create event with POST /api/events/admin
3. Update event details with PUT /api/events/admin/:id
4. View all events with GET /api/events/admin
5. Get single event details with GET /api/events/admin/:id
6. Check statistics with GET /api/events/summary
7. Perform bulk operations if needed with POST /api/events/admin/bulk
8. Delete event if necessary with DELETE /api/events/admin/:id

================================================================================
                                END
================================================================================ 